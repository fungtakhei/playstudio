name: PlayStudios.MyService


on:
  push:
    branches: [ "main" ]
    paths: 
    - 'PlayStudios.MyService/**'

  pull_request:
    branches: [ "main" ]
    paths:
    - 'PlayStudios.MyService/**'
  
  workflow_dispatch:


jobs:
  test_build:
    runs-on: ubuntu-latest    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x

      - name: test
        run: dotnet test ./PlayStudios.MyService/

      - name: package
        run: dotnet publish ./PlayStudios.MyService/PlayStudios.MyService.WebApi/ -c Release -o ./dist

      - name: dockerize the package
        run: docker build . --file Dockerfile --tag playstudios:latest
         
      - name: save the image as tar for deployment
        run: docker save playstudios:latest -o playstudios.tar

      - name: Cache
        uses: actions/cache@v3.0.11
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      
  deploy_dev:
    runs-on: ubuntu-latest
    needs: test_build
    environment: dev    
    steps:
    - name: restore cache
      uses: actions/cache@v2
      id: restore-build
      with:
        path: ./*
        key: ${{ github.sha }}
        
    - name: create KIND k8s cluster
      uses: helm/kind-action@v1.3.0
      with:        
        image: kindest/node:v1.25.2
        cluster_name: kind

    - name: load the playstudio docker image into kind cluster
      run: kind load image-archive playstudios.tar
    
    - name: deploy the docker image into dev cluster
      run: |
        kubectl run playstudios --image=playstudios:latest --image-pull-policy=IfNotPresent
        sleep 5
        kubectl get pod   
